name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/razee-engine:latest

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Update docker-compose.yml
        run: |
          sed -i 's|build:|image: ${{ secrets.DOCKER_USERNAME }}/razee-engine:latest|g' docker-compose.yml
          sed -i '/context:/d' docker-compose.yml
          sed -i '/dockerfile:/d' docker-compose.yml

      - name: Deploy to DigitalOcean Droplet
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DROPLET_IP: ${{ secrets.DROPLET_IP }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_REGION: ${{ secrets.S3_REGION }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          KMS_KEY_ID: ${{ secrets.KMS_KEY_ID }}
          AI71_API_KEY: ${{ secrets.AI71_API_KEY }}
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
          PINECONE_REGION: ${{ secrets.PINECONE_REGION }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $DROPLET_IP >> ~/.ssh/known_hosts

          scp -i ~/.ssh/id_rsa docker-compose.yml root@${DROPLET_IP}:/root/app/
          scp -i ~/.ssh/id_rsa -r nginx root@${DROPLET_IP}:/root/app/
          scp -i ~/.ssh/id_rsa -r certs root@${DROPLET_IP}:/root/app/

          ssh -i ~/.ssh/id_rsa root@${DROPLET_IP} << EOF
            cd /root/app
            echo "DOCKER_USERNAME=$DOCKER_USERNAME" > .env
            echo "SECRET_KEY=$SECRET_KEY" >> .env
            echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> .env
            echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> .env
            echo "S3_REGION=$S3_REGION" >> .env
            echo "S3_BUCKET=$S3_BUCKET" >> .env
            echo "KMS_KEY_ID=$KMS_KEY_ID" >> .env
            echo "AI71_API_KEY=$AI71_API_KEY" >> .env
            echo "PINECONE_API_KEY=$PINECONE_API_KEY" >> .env
            echo "PINECONE_REGION=$PINECONE_REGION" >> .env
            
            docker-compose down
            docker rm -f \$(docker ps -aq) || true
            docker-compose pull
            docker-compose up -d
          EOF