name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/razee-engine:latest

      - name: Deploy to DigitalOcean Droplet
        env:
            SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
            DROPLET_IP: ${{ secrets.DROPLET_IP }}
          run: |
            # Start SSH agent and add the private key
            eval "$(ssh-agent -s)"
            echo "$SSH_PRIVATE_KEY" | ssh-add -
        
            # Create necessary directories
            ssh -o StrictHostKeyChecking=no root@${DROPLET_IP} "mkdir -p /root/app/nginx /root/app/certs"
        
            # Transfer files to the correct locations
            scp -o StrictHostKeyChecking=no docker-compose.yml root@${DROPLET_IP}:/root/app/
            scp -o StrictHostKeyChecking=no nginx/nginx.conf root@${DROPLET_IP}:/root/app/nginx/
            scp -o StrictHostKeyChecking=no -r nginx/conf.d root@${DROPLET_IP}:/root/app/nginx/
            scp -o StrictHostKeyChecking=no -r certs root@${DROPLET_IP}:/root/app/
        
            # SSH into Droplet, login to Docker Hub, and run docker-compose
            ssh -o StrictHostKeyChecking=no root@${DROPLET_IP} "
              cd /root/app
              export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
              export DOCKER_ACCESS_TOKEN=${{ secrets.DOCKER_ACCESS_TOKEN }}
              docker login -u $DOCKER_USERNAME -p $DOCKER_ACCESS_TOKEN
              docker-compose pull
              docker-compose up -d --build
            "