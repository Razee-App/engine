name: Simple Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to DigitalOcean Droplet
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          DROPLET_IP: ${{ secrets.DROPLET_IP }}
        run: |
          # Set up SSH
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $DROPLET_IP >> ~/.ssh/known_hosts

          # Deploy to DigitalOcean
          ssh -i ~/.ssh/id_rsa root@${DROPLET_IP} << EOF
            # Navigate to the app directory
            cp ../.env /root/engine/
            mkdir -p /root/engine/certs
            cp ../certs/* /root/engine/certs/
            cd /root/engine
           

            # Pull latest changes from the repository
            git pull origin main

            # Stop and remove all containers
            docker-compose down --remove-orphans
            docker rm -f \$(docker ps -aq) || true
            
            # Remove all images
            docker rmi -f \$(docker images -aq) || true
            
            # Remove all volumes
            docker volume rm \$(docker volume ls -q) || true
            
            # Remove all networks
            docker network prune -f

            # Clean up any leftover Docker resources
            docker system prune -af --volumes

            # Pull the latest images and start the services
            docker-compose pull
            docker-compose up -d

            # Print the logs for debugging
            docker-compose logs
          EOF